basePath: /
definitions:
  dto.PetInsertDto:
    properties:
      adoption_date:
        example: "2008-01-02T15:04:05Z"
        type: string
      birthdate:
        example: "2006-01-02T15:04:05Z"
        type: string
      breed_id:
        example: 0e0b8399-1bf1-4ed5-a2f4-b5789ddf5df0
        type: string
      name:
        example: Thor
        type: string
      size:
        example: medium
        type: string
      user_id:
        example: fa1b8ae8-5351-11ef-8f02-0242ac130003
        type: string
      weight:
        example: 4.1
        type: number
    type: object
  entity.Pet:
    properties:
      adoption_date:
        type: string
      available_to_adoption:
        type: boolean
      birthdate:
        type: string
      breed_id:
        type: string
      breed_name:
        type: string
      castrated:
        type: boolean
      comorbidity:
        type: string
      id:
        type: string
      image_url:
        type: string
      name:
        type: string
      size:
        type: string
      special_care:
        $ref: '#/definitions/entity.SpecialCare'
      tags:
        type: string
      user_id:
        type: string
      vaccines:
        items:
          $ref: '#/definitions/entity.Vaccines'
        type: array
      weight:
        type: number
      weight_measure:
        type: string
    type: object
  entity.SpecialCare:
    properties:
      description:
        type: string
      needed:
        type: boolean
    type: object
  entity.Vaccines:
    properties:
      date:
        type: string
      doctor_crm:
        type: string
      id:
        type: string
      name:
        type: string
      pet_id:
        type: string
    type: object
host: localhost:3000/api
info:
  contact:
    name: DevHatt
    url: https://github.com/devhatt
  description: Esta página se destina a documentação da API do projeto PetDex Backend
  license:
    name: MIT license
    url: https://github.com/devhatt/pet-dex-backend?tab=MIT-1-ov-file#readme
  title: 'PetDex: Documentação API'
  version: "1.0"
paths:
  /pets/:
    post:
      consumes:
      - application/json
      description: Sends the Pet's registration data via the request body for persistence
        in the database.
      parameters:
      - description: Pet object information for registration
        in: body
        name: petDto
        required: true
        schema:
          $ref: '#/definitions/dto.PetInsertDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create Pet by petDto
      tags:
      - Pet
  /pets/{petID}:
    get:
      consumes:
      - application/json
      description: Retrieves Pet details based on the pet ID provided as a parameter.
      parameters:
      - description: ID of the Pet to be retrieved
        in: path
        name: petID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Pet'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Find Pet by ID
      tags:
      - Pet
swagger: "2.0"
