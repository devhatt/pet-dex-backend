// Code generated by mockery v2.43.2. DO NOT EDIT.

package interfaces

import (
	dto "pet-dex-backend/v2/entity/dto"

	mock "github.com/stretchr/testify/mock"
)

// MockSingleSignOnGateway is an autogenerated mock type for the SingleSignOnGateway type
type MockSingleSignOnGateway struct {
	mock.Mock
}

type MockSingleSignOnGateway_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSingleSignOnGateway) EXPECT() *MockSingleSignOnGateway_Expecter {
	return &MockSingleSignOnGateway_Expecter{mock: &_m.Mock}
}

// GetUserDetails provides a mock function with given fields: accessToken
func (_m *MockSingleSignOnGateway) GetUserDetails(accessToken string) (*dto.UserSSODto, error) {
	ret := _m.Called(accessToken)

	if len(ret) == 0 {
		panic("no return value specified for GetUserDetails")
	}

	var r0 *dto.UserSSODto
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*dto.UserSSODto, error)); ok {
		return rf(accessToken)
	}
	if rf, ok := ret.Get(0).(func(string) *dto.UserSSODto); ok {
		r0 = rf(accessToken)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*dto.UserSSODto)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(accessToken)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockSingleSignOnGateway_GetUserDetails_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetUserDetails'
type MockSingleSignOnGateway_GetUserDetails_Call struct {
	*mock.Call
}

// GetUserDetails is a helper method to define mock.On call
//   - accessToken string
func (_e *MockSingleSignOnGateway_Expecter) GetUserDetails(accessToken interface{}) *MockSingleSignOnGateway_GetUserDetails_Call {
	return &MockSingleSignOnGateway_GetUserDetails_Call{Call: _e.mock.On("GetUserDetails", accessToken)}
}

func (_c *MockSingleSignOnGateway_GetUserDetails_Call) Run(run func(accessToken string)) *MockSingleSignOnGateway_GetUserDetails_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockSingleSignOnGateway_GetUserDetails_Call) Return(_a0 *dto.UserSSODto, _a1 error) *MockSingleSignOnGateway_GetUserDetails_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockSingleSignOnGateway_GetUserDetails_Call) RunAndReturn(run func(string) (*dto.UserSSODto, error)) *MockSingleSignOnGateway_GetUserDetails_Call {
	_c.Call.Return(run)
	return _c
}

// Name provides a mock function with given fields:
func (_m *MockSingleSignOnGateway) Name() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Name")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockSingleSignOnGateway_Name_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Name'
type MockSingleSignOnGateway_Name_Call struct {
	*mock.Call
}

// Name is a helper method to define mock.On call
func (_e *MockSingleSignOnGateway_Expecter) Name() *MockSingleSignOnGateway_Name_Call {
	return &MockSingleSignOnGateway_Name_Call{Call: _e.mock.On("Name")}
}

func (_c *MockSingleSignOnGateway_Name_Call) Run(run func()) *MockSingleSignOnGateway_Name_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSingleSignOnGateway_Name_Call) Return(_a0 string) *MockSingleSignOnGateway_Name_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSingleSignOnGateway_Name_Call) RunAndReturn(run func() string) *MockSingleSignOnGateway_Name_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockSingleSignOnGateway creates a new instance of MockSingleSignOnGateway. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSingleSignOnGateway(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSingleSignOnGateway {
	mock := &MockSingleSignOnGateway{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
